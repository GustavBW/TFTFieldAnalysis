/* tslint:disable */
/* eslint-disable */
/**
 * 
 * 
 *
 * 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { TrainingSession } from './TrainingSession';
import {
    TrainingSessionFromJSON,
    TrainingSessionFromJSONTyped,
    TrainingSessionToJSON,
} from './TrainingSession';

/**
 * 
 * @export
 * @interface ModelMetaDataDTO
 */
export interface ModelMetaDataDTO {
    /**
     * 
     * @type {number}
     * @memberof ModelMetaDataDTO
     */
    modelId?: number;
    /**
     * 
     * @type {Array<string>}
     * @memberof ModelMetaDataDTO
     */
    matchIdsEvaluated?: Array<string>;
    /**
     * 
     * @type {Array<TrainingSession>}
     * @memberof ModelMetaDataDTO
     */
    dateSecondsTrainingMap?: Array<TrainingSession>;
    /**
     * 
     * @type {{ [key: string]: number; }}
     * @memberof ModelMetaDataDTO
     */
    cachedValues?: { [key: string]: number; };
    /**
     * 
     * @type {{ [key: string]: number; }}
     * @memberof ModelMetaDataDTO
     */
    pointsPerNamespace?: { [key: string]: number; };
    /**
     * 
     * @type {{ [key: string]: number; }}
     * @memberof ModelMetaDataDTO
     */
    pointsWithTagCount?: { [key: string]: number; };
}

/**
 * Check if a given object implements the ModelMetaDataDTO interface.
 */
export function instanceOfModelMetaDataDTO(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ModelMetaDataDTOFromJSON(json: any): ModelMetaDataDTO {
    return ModelMetaDataDTOFromJSONTyped(json, false);
}

export function ModelMetaDataDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): ModelMetaDataDTO {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'modelId': !exists(json, 'modelId') ? undefined : json['modelId'],
        'matchIdsEvaluated': !exists(json, 'matchIdsEvaluated') ? undefined : json['matchIdsEvaluated'],
        'dateSecondsTrainingMap': !exists(json, 'dateSecondsTrainingMap') ? undefined : ((json['dateSecondsTrainingMap'] as Array<any>).map(TrainingSessionFromJSON)),
        'cachedValues': !exists(json, 'cachedValues') ? undefined : json['cachedValues'],
        'pointsPerNamespace': !exists(json, 'pointsPerNamespace') ? undefined : json['pointsPerNamespace'],
        'pointsWithTagCount': !exists(json, 'pointsWithTagCount') ? undefined : json['pointsWithTagCount'],
    };
}

export function ModelMetaDataDTOToJSON(value?: ModelMetaDataDTO | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'modelId': value.modelId,
        'matchIdsEvaluated': value.matchIdsEvaluated,
        'dateSecondsTrainingMap': value.dateSecondsTrainingMap === undefined ? undefined : ((value.dateSecondsTrainingMap as Array<any>).map(TrainingSessionToJSON)),
        'cachedValues': value.cachedValues,
        'pointsPerNamespace': value.pointsPerNamespace,
        'pointsWithTagCount': value.pointsWithTagCount,
    };
}

