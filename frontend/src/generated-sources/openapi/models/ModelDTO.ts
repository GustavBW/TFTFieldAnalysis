/* tslint:disable */
/* eslint-disable */
/**
 * 
 * 
 *
 * 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { DataPointDTO } from './DataPointDTO';
import {
    DataPointDTOFromJSON,
    DataPointDTOFromJSONTyped,
    DataPointDTOToJSON,
} from './DataPointDTO';
import type { ModelMetaDataDTO } from './ModelMetaDataDTO';
import {
    ModelMetaDataDTOFromJSON,
    ModelMetaDataDTOFromJSONTyped,
    ModelMetaDataDTOToJSON,
} from './ModelMetaDataDTO';

/**
 * Response data.
 * @export
 * @interface ModelDTO
 */
export interface ModelDTO {
    /**
     * 
     * @type {ModelMetaDataDTO}
     * @memberof ModelDTO
     */
    metadata?: ModelMetaDataDTO;
    /**
     * 
     * @type {Array<string>}
     * @memberof ModelDTO
     */
    namespaces?: Array<string>;
    /**
     * 
     * @type {{ [key: string]: Array<DataPointDTO>; }}
     * @memberof ModelDTO
     */
    pointIdEdgeSetMap?: { [key: string]: Array<DataPointDTO>; };
    /**
     * 
     * @type {{ [key: string]: Array<DataPointDTO>; }}
     * @memberof ModelDTO
     */
    namespacePointMap?: { [key: string]: Array<DataPointDTO>; };
}

/**
 * Check if a given object implements the ModelDTO interface.
 */
export function instanceOfModelDTO(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ModelDTOFromJSON(json: any): ModelDTO {
    return ModelDTOFromJSONTyped(json, false);
}

export function ModelDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): ModelDTO {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'metadata': !exists(json, 'metadata') ? undefined : ModelMetaDataDTOFromJSON(json['metadata']),
        'namespaces': !exists(json, 'namespaces') ? undefined : json['namespaces'],
        'pointIdEdgeSetMap': !exists(json, 'pointIdEdgeSetMap') ? undefined : json['pointIdEdgeSetMap'],
        'namespacePointMap': !exists(json, 'namespacePointMap') ? undefined : json['namespacePointMap'],
    };
}

export function ModelDTOToJSON(value?: ModelDTO | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'metadata': ModelMetaDataDTOToJSON(value.metadata),
        'namespaces': value.namespaces,
        'pointIdEdgeSetMap': value.pointIdEdgeSetMap,
        'namespacePointMap': value.namespacePointMap,
    };
}

