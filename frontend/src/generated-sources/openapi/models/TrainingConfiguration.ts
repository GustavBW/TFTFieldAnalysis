/* tslint:disable */
/* eslint-disable */
/**
 * 
 * 
 *
 * 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface TrainingConfiguration
 */
export interface TrainingConfiguration {
    /**
     * 
     * @type {number}
     * @memberof TrainingConfiguration
     */
    maxMatchCount?: number;
    /**
     * 
     * @type {string}
     * @memberof TrainingConfiguration
     */
    patch?: string;
    /**
     * 
     * @type {boolean}
     * @memberof TrainingConfiguration
     */
    confineToBasePlayer?: boolean;
    /**
     * 
     * @type {string}
     * @memberof TrainingConfiguration
     */
    serverTarget?: TrainingConfigurationServerTargetEnum;
}


/**
 * @export
 */
export const TrainingConfigurationServerTargetEnum = {
    Europe: 'EUROPE',
    America: 'AMERICA',
    Asia: 'ASIA',
    Sea: 'SEA',
    ErrUnknown: 'ERR_UNKNOWN'
} as const;
export type TrainingConfigurationServerTargetEnum = typeof TrainingConfigurationServerTargetEnum[keyof typeof TrainingConfigurationServerTargetEnum];


/**
 * Check if a given object implements the TrainingConfiguration interface.
 */
export function instanceOfTrainingConfiguration(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function TrainingConfigurationFromJSON(json: any): TrainingConfiguration {
    return TrainingConfigurationFromJSONTyped(json, false);
}

export function TrainingConfigurationFromJSONTyped(json: any, ignoreDiscriminator: boolean): TrainingConfiguration {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'maxMatchCount': !exists(json, 'maxMatchCount') ? undefined : json['maxMatchCount'],
        'patch': !exists(json, 'patch') ? undefined : json['patch'],
        'confineToBasePlayer': !exists(json, 'confineToBasePlayer') ? undefined : json['confineToBasePlayer'],
        'serverTarget': !exists(json, 'serverTarget') ? undefined : json['serverTarget'],
    };
}

export function TrainingConfigurationToJSON(value?: TrainingConfiguration | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'maxMatchCount': value.maxMatchCount,
        'patch': value.patch,
        'confineToBasePlayer': value.confineToBasePlayer,
        'serverTarget': value.serverTarget,
    };
}

