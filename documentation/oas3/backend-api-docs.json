{"openapi":"3.0.1","info":{"title":"OpenAPI definition","version":"v0"},"servers":[{"url":"http://localhost:13498","description":"Generated server url"}],"paths":{"/api/v1/train/{id}":{"post":{"tags":["model-training-controller"],"summary":"Train model, response withheld until completion.","operationId":"trainModel","parameters":[{"name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int32"}},{"name":"puuid","in":"query","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/TrainingConfiguration"}}}},"responses":{"500":{"description":"Internal model registry missing"},"400":{"description":"Error encountered before training start"},"404":{"description":"Unknown model"},"501":{"description":"Error encountered while training, details.notes contains what matchIds were evaluated"},"200":{"description":"Model id","content":{"application/json":{"schema":{"type":"integer","format":"int32"}}}}}}},"/api/v1/model/{id}/delete":{"post":{"tags":["data-model-controller"],"summary":"Remove model permanently.","operationId":"deleteModel","parameters":[{"name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"500":{"description":"Internal model registry missing"},"200":{"description":"Success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DetailedResponse"}}}},"404":{"description":"No such model"}}}},"/api/v1/model/create":{"post":{"tags":["data-model-controller"],"summary":"Create a new empty model","operationId":"createModel","responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ModelDTO"}}}}}}},"/version":{"get":{"tags":["service-metadata-controller"],"summary":"Retrieve current web service version.","operationId":"getVersion","responses":{"200":{"description":"List of tags sorted on how many points had that tag, in descending order.","content":{"application/json":{"schema":{"type":"string"}}}},"500":{"description":"Internal error, unable to retrieve value"}}}},"/api/v1/travel/{modelId}/next":{"get":{"tags":["travel-controller"],"summary":"Retrieves next options for the current travel context","operationId":"travelModel","parameters":[{"name":"modelId","in":"path","required":true,"schema":{"type":"integer","format":"int32"}},{"name":"context","in":"query","required":true,"schema":{"type":"string"}}],"responses":{"500":{"description":"Internal model registry missing"},"200":{"description":"List of options, unsorted.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/TravelBranchOptionDTO"}}}}},"404":{"description":"No such model"}}}},"/api/v1/travel/{modelId}/full":{"get":{"tags":["travel-controller"],"summary":"Retrieves the full travel context data.","operationId":"getFullTravelPath","parameters":[{"name":"modelId","in":"path","required":true,"schema":{"type":"integer","format":"int32"}},{"name":"context","in":"query","required":true,"schema":{"type":"string"}}],"responses":{"500":{"description":"Internal model registry missing"},"400":{"description":"Invalid context","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DetailedResponse"}}}},"404":{"description":"No such model"},"200":{"description":"Each entry contains a list of branch options, where the first option is the \"branch origin point\"","content":{"application/json":{}}}}}},"/api/v1/travel/contextSyntaxDeclaration":{"get":{"tags":["travel-controller"],"summary":"Retrieves documentation regarding the whole Travel Context ordeal.","operationId":"getSyntaxDeclaration","responses":{"200":{"description":"List of options, unsorted.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TravelContextSyntaxDeclaration"}}}}}}},"/api/v1/train/validate/{ign}/server/{server}":{"get":{"tags":["model-training-controller"],"summary":"Cross confirmation: Validate account, returns IGN","operationId":"validateIGN","parameters":[{"name":"ign","in":"path","required":true,"schema":{"type":"string"}},{"name":"server","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"404":{"description":"Invalid account server target"},"200":{"description":"IGN","content":{"application/json":{"schema":{"type":"string"}}}},"400":{"description":"Unable to locate/access account"}}}},"/api/v1/train/serverTargets":{"get":{"tags":["model-training-controller"],"summary":"Static asset retrieval: Get TFT Server Targets","operationId":"getValidServerTargets","responses":{"200":{"description":"none","content":{"application/json":{"schema":{"type":"string"}}}}}}},"/api/v1/train/serverLocations":{"get":{"tags":["model-training-controller"],"summary":"Static asset retrieval: Get RIOT Account Server Targets","operationId":"getAllServerLocations","responses":{"200":{"description":"none","content":{"application/json":{"schema":{"type":"string"}}}}}}},"/api/v1/model/{id}":{"get":{"tags":["data-model-controller"],"summary":"Retrieves ALL data associated with a given model. Do not automate. Only retrieve the data from a model you need.","operationId":"getModel","parameters":[{"name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"500":{"description":"Internal model registry missing"},"404":{"description":"No such model"},"200":{"description":"Success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ModelDTO"}}}}}}},"/api/v1/model/{id}/tags":{"get":{"tags":["data-model-controller"],"summary":"Retrives all tags for all points in model.","operationId":"getModelTags","parameters":[{"name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"500":{"description":"Internal model registry missing"},"404":{"description":"No such model"},"200":{"description":"List of tags sorted on how many points had that tag, in descending order.","content":{"application/json":{"schema":{"type":"string"}}}}}}},"/api/v1/model/{id}/points":{"get":{"tags":["data-model-controller"],"summary":"Query model DataPoints which conforms to provided parameters.","operationId":"getPoints","parameters":[{"name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int32"}},{"name":"namespace","in":"query","required":false,"schema":{"type":"string"}},{"name":"pointIds","in":"query","required":false,"schema":{"type":"array","items":{"type":"integer","format":"int32"}}},{"name":"tags","in":"query","required":false,"schema":{"type":"array","items":{"type":"string"}}}],"responses":{"500":{"description":"Internal model registry missing"},"418":{"description":"Api usage error.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DetailedResponse"}}}},"200":{"description":"Success","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/DataPointDTO"}}}}},"404":{"description":"No such model"}}}},"/api/v1/model/{id}/namespaces":{"get":{"tags":["data-model-controller"],"summary":"Retrieves all namespaces in model","operationId":"getNamespaces","parameters":[{"name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"500":{"description":"Internal model registry missing"},"404":{"description":"No such model"},"200":{"description":"Success","content":{"application/json":{"schema":{"type":"array","items":{"type":"string"}}}}}}}},"/api/v1/model/{id}/metadata":{"get":{"tags":["data-model-controller"],"summary":"Get metadata for model","operationId":"getModelMetadata","parameters":[{"name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"500":{"description":"Internal model registry missing"},"404":{"description":"No such model"},"200":{"description":"Model metadata","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ModelMetaDataDTO"}}}}}}},"/api/v1/model/{id}/edges":{"get":{"tags":["data-model-controller"],"summary":"Query edges for points, resulting edge lists are sorted based on occurrence value in descending order","operationId":"getEdgeSets","parameters":[{"name":"points","in":"query","required":true,"schema":{"type":"array","items":{"type":"integer","format":"int32"}}},{"name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"404":{"description":"No such model","content":{"*/*":{"schema":{"$ref":"#/components/schemas/DetailedResponseMapIntegerListEdgeDTO"}}}},"200":{"description":"Map of each point id provided as key and with a list of its edges as value","content":{"application/json":{}}},"500":{"description":"Internal model registry missing","content":{"*/*":{"schema":{"$ref":"#/components/schemas/DetailedResponseMapIntegerListEdgeDTO"}}}},"206":{"description":"Partial success","content":{"application/json":{"schema":{"type":"string"}}}},"400":{"description":"No such points in model","content":{"*/*":{"schema":{"$ref":"#/components/schemas/DetailedResponseMapIntegerListEdgeDTO"}}}}}}},"/api/v1/model/all":{"get":{"tags":["data-model-controller"],"summary":"Retrieves all model ids currently in registry.","operationId":"getAllModelIds","responses":{"500":{"description":"Internal model registry missing"},"200":{"description":"Success","content":{"application/json":{"schema":{"type":"array","items":{"type":"integer","format":"int32"}}}}}}}},"/":{"get":{"tags":["service-metadata-controller"],"operationId":"hello","responses":{"200":{"description":"OK","content":{"*/*":{"schema":{"$ref":"#/components/schemas/DetailedResponseString"}}}}}}}},"components":{"schemas":{"TrainingConfiguration":{"type":"object","properties":{"maxMatchCount":{"type":"integer","format":"int32"},"patch":{"type":"string"},"confineToBasePlayer":{"type":"boolean"},"serverTarget":{"type":"string","enum":["EUROPE","AMERICA","ASIA","SEA","ERR_UNKNOWN"]}}},"DetailedResponse":{"type":"object","properties":{"response":{"type":"object"},"details":{"$ref":"#/components/schemas/ResponseDetails"}}},"ResponseDetails":{"type":"object","properties":{"name":{"type":"string"},"description":{"type":"string"},"notes":{"type":"array","items":{"type":"string"}}}},"DataPointDTO":{"type":"object","properties":{"id":{"type":"integer","format":"int32"},"namespace":{"type":"string"},"tags":{"type":"array","items":{"type":"string"}}}},"EdgeDTO":{"type":"object","properties":{"pointA":{"type":"integer","format":"int32"},"pointB":{"type":"integer","format":"int32"},"occurrence":{"type":"integer","format":"int64"}}},"ModelDTO":{"type":"object","properties":{"metadata":{"$ref":"#/components/schemas/ModelMetaDataDTO"},"namespaces":{"type":"array","items":{"type":"string"}},"pointIdEdgeSetMap":{"type":"object","additionalProperties":{"type":"array","items":{"$ref":"#/components/schemas/EdgeDTO"}}},"namespacePointMap":{"type":"object","additionalProperties":{"type":"array","items":{"$ref":"#/components/schemas/DataPointDTO"}}}}},"ModelMetaDataDTO":{"type":"object","properties":{"modelId":{"type":"integer","format":"int32"},"matchIdsEvaluated":{"type":"array","items":{"type":"string"}},"dateSecondsTrainingMap":{"type":"array","items":{"$ref":"#/components/schemas/TrainingSession"}},"cachedValues":{"type":"object","additionalProperties":{"type":"integer","format":"int64"}},"pointsPerNamespace":{"type":"object","additionalProperties":{"type":"integer","format":"int64"}},"pointsWithTagCount":{"type":"object","additionalProperties":{"type":"integer","format":"int64"}}}},"TrainingSession":{"type":"object","properties":{"date":{"type":"string","format":"date-time"},"msTaken":{"type":"integer","format":"int64"}}},"TravelBranchOptionDTO":{"type":"object","properties":{"option":{"$ref":"#/components/schemas/DataPointDTO"},"edge":{"$ref":"#/components/schemas/EdgeDTO"}}},"TravelContextSyntaxDeclaration":{"type":"object","properties":{"entryEnd":{"type":"string"},"entrySubdivision":{"type":"string"},"entryMemberSubdivision":{"type":"string"},"syntax":{"type":"string"}}},"DetailedResponseMapIntegerListEdgeDTO":{"type":"object","properties":{"response":{"type":"object","additionalProperties":{"type":"array","items":{"$ref":"#/components/schemas/EdgeDTO"}}},"details":{"$ref":"#/components/schemas/ResponseDetails"}}},"DetailedResponseString":{"type":"object","properties":{"response":{"type":"string"},"details":{"$ref":"#/components/schemas/ResponseDetails"}}}}}}